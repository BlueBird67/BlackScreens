<Window x:Class="BlackScreensWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BlackScreensWPF" xmlns:taskbarnotification="clr-namespace:Hardcodet.Wpf.TaskbarNotification"
        mc:Ignorable="d"
        Title="BlackScreens"
        FontSize="18" Foreground="White" Background="Black" FontFamily="Ubuntu" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" BorderThickness="1" WindowStyle="None" StateChanged="Window_StateChanged" Loaded="Window_Loaded" KeyDown="Window_KeyDown" Topmost="True" Closing="Window_Closing" Width="800" SizeToContent="Height">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="Black"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="White"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="Black"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyleBlack" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="16" Height="16">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{DynamicResource OptionMark.Static.Background}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    <StackPanel Width="796">
        <Grid Grid.Row="0" Height="39px" VerticalAlignment="top" Background="#262626" Name="gridMain">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Width="22" Height="22" Margin="4" Style="{StaticResource TitleBarButtonStyle}" PreviewMouseLeftButtonDown="Image_MouseDown" Cursor="Hand">
                <Image Source="moon.png"/>
            </Button>
            <Button Style="{StaticResource TitleBarButtonStyle}" Cursor="Hand" Grid.Column="1" Margin="4 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left">
            <TextBlock Name="tbTitle"
		Grid.Column="1"
		Margin="4 0 0 0"
		VerticalAlignment="Center"
		FontSize="14"
        Foreground="White"
		Text="" MouseDown="Image_MouseDown">
                </TextBlock>
            </Button>
            <Button
            Grid.Column="2"
		Click="OnMinimizeButtonClick"
		RenderOptions.EdgeMode="Aliased"
		Style="{StaticResource TitleBarButtonStyle}">
                <Path
			Width="46"
			Height="32"
			Data="M 18,15 H 28"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
            </Button>
            <Button
		Grid.Column="4"
		Click="OnCloseButtonClick"
		Style="{StaticResource TitleBarButtonStyle}">
                <Path
			Width="46"
			Height="32"
			Data="M 18,11 27,20 M 18,20 27,11"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
            </Button>
        </Grid>

        <Grid Grid.Row="1" Margin="0 5 0 5" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Margin="5 0 5 5" Orientation="Horizontal"  Background="#FF1E1B1B" Visibility="Collapsed">
                <Expander Margin="0 0 0 0"/>
                <TextBlock Foreground="White">
                    <Run>BlackScreens créé par BlueBird</Run>
                    <LineBreak/>
                    <Run></Run>
                </TextBlock>
            </StackPanel>
            <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Name="tbScreen1AltKeyInfo">Alt+1 : switch 1st screen</TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" Name="tbScreen2AltKeyInfo">Alt+2 : switch 2nd screen</TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" Name="tbScreen3AltKeyInfo">Alt+3 : switch 3td screen</TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Name="tbScreen1SetImage" FontSize="12px" MouseLeftButtonDown="tbScreen1SetImage_MouseLeftButtonDown">Set image</TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="0" HorizontalAlignment="Center" Name="tbScreen1Name" Text="{Binding Screen1Name}" ToolTipService.ShowDuration="500000" MouseLeftButtonDown="tbScreen1Name_MouseLeftButtonDown">
                <TextBlock.ToolTip>
                    <TextBlock Name="ttScreen1">
                        <Run Text="Left: "/><Run Text="{Binding Screen1TooltipData.Left, Mode=OneWay}"></Run>
                        <Run Text="X: "/><Run Text="{Binding Screen1TooltipData.X, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Top: "/><Run Text="{Binding Screen1TooltipData.Top, Mode=OneWay}"></Run>
                        <Run Text="Y: "/><Run Text="{Binding Screen1TooltipData.Y, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Right: "/><Run Text="{Binding Screen1TooltipData.Right, Mode=OneWay}"></Run>
                        <Run Text="Width: "/><Run Text="{Binding Screen1TooltipData.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Bottom: "/><Run Text="{Binding Screen1TooltipData.Bottom, Mode=OneWay}"></Run>
                        <Run Text="Height: "/><Run Text="{Binding Screen1TooltipData.Height, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Size.Height: "/><Run Text="{Binding Screen1TooltipData.Size.Height, Mode=OneWay}"></Run>
                        <Run Text="Size.Width: "/><Run Text="{Binding Screen1TooltipData.Size.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Location.X: "/><Run Text="{Binding Screen1TooltipData.Location.X, Mode=OneWay}"></Run>
                        <Run Text="Location.Y: "/><Run Text="{Binding Screen1TooltipData.Location.Y, Mode=OneWay}"></Run>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Name="tbScreen2SetImage" FontSize="12px" MouseLeftButtonDown="tbScreen2SetImage_MouseLeftButtonDown">Set image</TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" Name="tbScreen2Name" Text="{Binding Screen2Name}" ToolTipService.ShowDuration="500000">
                <TextBlock.ToolTip>
                    <TextBlock Name="ttScreen2">
                        <Run Text="Left: "/><Run Text="{Binding Screen2TooltipData.Left, Mode=OneWay}"></Run>
                        <Run Text="X: "/><Run Text="{Binding Screen2TooltipData.X, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Top: "/><Run Text="{Binding Screen2TooltipData.Top, Mode=OneWay}"></Run>
                        <Run Text="Y: "/><Run Text="{Binding Screen2TooltipData.Y, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Right: "/><Run Text="{Binding Screen2TooltipData.Right, Mode=OneWay}"></Run>
                        <Run Text="Width: "/><Run Text="{Binding Screen2TooltipData.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Bottom: "/><Run Text="{Binding Screen2TooltipData.Bottom, Mode=OneWay}"></Run>
                        <Run Text="Height: "/><Run Text="{Binding Screen2TooltipData.Height, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Size.Height: "/><Run Text="{Binding Screen2TooltipData.Size.Height, Mode=OneWay}"></Run>
                        <Run Text="Size.Width: "/><Run Text="{Binding Screen2TooltipData.Size.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Location.X: "/><Run Text="{Binding Screen2TooltipData.Location.X, Mode=OneWay}"></Run>
                        <Run Text="Location.Y: "/><Run Text="{Binding Screen2TooltipData.Location.Y, Mode=OneWay}"></Run>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Name="tbScreen3SetImage" FontSize="12px" MouseLeftButtonDown="tbScreen3SetImage_MouseLeftButtonDown">Set image</TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="2" HorizontalAlignment="Center" Name="tbScreen3Name" Text="{Binding Screen3Name}" ToolTipService.ShowDuration="500000">
                <TextBlock.ToolTip>
                    <TextBlock Name="ttScreen3">
                        <Run Text="Left: "/><Run Text="{Binding Screen3TooltipData.Left, Mode=OneWay}"></Run>
                        <Run Text="X: "/><Run Text="{Binding Screen3TooltipData.X, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Top: "/><Run Text="{Binding Screen3TooltipData.Top, Mode=OneWay}"></Run>
                        <Run Text="Y: "/><Run Text="{Binding Screen3TooltipData.Y, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Right: "/><Run Text="{Binding Screen3TooltipData.Right, Mode=OneWay}"></Run>
                        <Run Text="Width: "/><Run Text="{Binding Screen3TooltipData.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Bottom: "/><Run Text="{Binding Screen3TooltipData.Bottom, Mode=OneWay}"></Run>
                        <Run Text="Height: "/><Run Text="{Binding Screen3TooltipData.Height, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Size.Height: "/><Run Text="{Binding Screen3TooltipData.Size.Height, Mode=OneWay}"></Run>
                        <Run Text="Size.Width: "/><Run Text="{Binding Screen3TooltipData.Size.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Location.X: "/><Run Text="{Binding Screen3TooltipData.Location.X, Mode=OneWay}"></Run>
                        <Run Text="Location.Y: "/><Run Text="{Binding Screen3TooltipData.Location.Y, Mode=OneWay}"></Run>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="0" HorizontalAlignment="Center" Name="tbScreen4AltKeyInfo">Alt+4 : switch 1st screen</TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" Name="tbScreen5AltKeyInfo">Alt+5 : switch 2nd screen</TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="2" HorizontalAlignment="Center" Name="tbScreen6AltKeyInfo">Alt+6 : switch 3td screen</TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="0" HorizontalAlignment="Center" Name="tbScreen4Name" Text="{Binding Screen1Name}" ToolTipService.ShowDuration="500000">
                <TextBlock.ToolTip>
                    <TextBlock Name="ttScreen4">
                        <Run Text="Left: "/><Run Text="{Binding Screen4TooltipData.Left, Mode=OneWay}"></Run>
                        <Run Text="X: "/><Run Text="{Binding Screen4TooltipData.X, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Top: "/><Run Text="{Binding Screen4TooltipData.Top, Mode=OneWay}"></Run>
                        <Run Text="Y: "/><Run Text="{Binding Screen4TooltipData.Y, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Right: "/><Run Text="{Binding Screen4TooltipData.Right, Mode=OneWay}"></Run>
                        <Run Text="Width: "/><Run Text="{Binding Screen4TooltipData.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Bottom: "/><Run Text="{Binding Screen4TooltipData.Bottom, Mode=OneWay}"></Run>
                        <Run Text="Height: "/><Run Text="{Binding Screen4TooltipData.Height, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Size.Height: "/><Run Text="{Binding Screen4TooltipData.Size.Height, Mode=OneWay}"></Run>
                        <Run Text="Size.Width: "/><Run Text="{Binding Screen4TooltipData.Size.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Location.X: "/><Run Text="{Binding Screen4TooltipData.Location.X, Mode=OneWay}"></Run>
                        <Run Text="Location.Y: "/><Run Text="{Binding Screen4TooltipData.Location.Y, Mode=OneWay}"></Run>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="1" HorizontalAlignment="Center" Name="tbScreen5Name" Text="{Binding Screen2Name}" ToolTipService.ShowDuration="500000">
                <TextBlock.ToolTip>
                    <TextBlock Name="ttScreen5">
                        <Run Text="Left: "/><Run Text="{Binding Screen5TooltipData.Left, Mode=OneWay}"></Run>
                        <Run Text="X: "/><Run Text="{Binding Screen5TooltipData.X, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Top: "/><Run Text="{Binding Screen5TooltipData.Top, Mode=OneWay}"></Run>
                        <Run Text="Y: "/><Run Text="{Binding Screen5TooltipData.Y, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Right: "/><Run Text="{Binding Screen5TooltipData.Right, Mode=OneWay}"></Run>
                        <Run Text="Width: "/><Run Text="{Binding Screen5TooltipData.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Bottom: "/><Run Text="{Binding Screen5TooltipData.Bottom, Mode=OneWay}"></Run>
                        <Run Text="Height: "/><Run Text="{Binding Screen5TooltipData.Height, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Size.Height: "/><Run Text="{Binding Screen5TooltipData.Size.Height, Mode=OneWay}"></Run>
                        <Run Text="Size.Width: "/><Run Text="{Binding Screen5TooltipData.Size.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Location.X: "/><Run Text="{Binding Screen5TooltipData.Location.X, Mode=OneWay}"></Run>
                        <Run Text="Location.Y: "/><Run Text="{Binding Screen5TooltipData.Location.Y, Mode=OneWay}"></Run>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="2" HorizontalAlignment="Center" Name="tbScreen6Name" Text="{Binding Screen3Name}" ToolTipService.ShowDuration="500000">
                <TextBlock.ToolTip>
                    <TextBlock Name="ttScreen6">
                        <Run Text="Left: "/><Run Text="{Binding Screen6TooltipData.Left, Mode=OneWay}"></Run>
                        <Run Text="X: "/><Run Text="{Binding Screen6TooltipData.X, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Top: "/><Run Text="{Binding Screen6TooltipData.Top, Mode=OneWay}"></Run>
                        <Run Text="Y: "/><Run Text="{Binding Screen6TooltipData.Y, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Right: "/><Run Text="{Binding Screen6TooltipData.Right, Mode=OneWay}"></Run>
                        <Run Text="Width: "/><Run Text="{Binding Screen6TooltipData.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Bottom: "/><Run Text="{Binding Screen6TooltipData.Bottom, Mode=OneWay}"></Run>
                        <Run Text="Height: "/><Run Text="{Binding Screen6TooltipData.Height, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Size.Height: "/><Run Text="{Binding Screen6TooltipData.Size.Height, Mode=OneWay}"></Run>
                        <Run Text="Size.Width: "/><Run Text="{Binding Screen6TooltipData.Size.Width, Mode=OneWay}"></Run><LineBreak/>
                        <Run Text="Location.X: "/><Run Text="{Binding Screen6TooltipData.Location.X, Mode=OneWay}"></Run>
                        <Run Text="Location.Y: "/><Run Text="{Binding Screen6TooltipData.Location.Y, Mode=OneWay}"></Run>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>
            <TextBlock Grid.Row="5" Grid.Column="0" HorizontalAlignment="Left" Margin="35 15 0 0">
                Opacity
                <TextBlock Margin="70 0 0 0" HorizontalAlignment="Right" Width="30" Text="{Binding ElementName=sOpacity, Path=Value, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                <TextBlock Margin="0 0 0 0" HorizontalAlignment="Right" Width="auto">%</TextBlock>
            </TextBlock>
            <Slider Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" Margin="0 15 0 0" HorizontalAlignment="Left" Name="sOpacity" Value="{Binding Opacity}" Maximum="100" Width="511" TickFrequency="5" TickPlacement="Both" IsSnapToTickEnabled="True" ValueChanged="sOpacity_ValueChanged">
            </Slider>
            <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="5" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0 10 0 0">
                <TextBlock Grid.Row="6" Grid.Column="0" HorizontalAlignment="Center" Text="Hide texts" Margin="70 0 15 0"></TextBlock>
                <CheckBox Grid.Row="6" Grid.Column="0" HorizontalAlignment="Center" Name="cbShowTexts" Margin="0 0 75 0" Background="Black" Foreground="#FFFDFDFD" Style="{DynamicResource CheckBoxStyleBlack}" IsChecked="{Binding HideTexts}"></CheckBox>
                <TextBlock Grid.Row="6" Grid.Column="1" HorizontalAlignment="Center" Text="Allow click through" Margin="0 0 15 0"></TextBlock>
                <CheckBox Grid.Row="6" Grid.Column="1" HorizontalAlignment="Center" Name="cbClickThrough" Margin="0 0 0 0" Background="Black" Foreground="#FFFDFDFD" Style="{DynamicResource CheckBoxStyleBlack}" IsChecked="{Binding ClickThrough}" Click="cbClickThrough_Click"></CheckBox>
            </StackPanel>
            <Button Grid.Row="7" Grid.Column="0" Margin="4,15,6,0" Height="30" Grid.ColumnSpan="1" Name="bExit" Click="bExit_Click">Exit</Button>
            <Button Grid.Row="7" Grid.Column="1" Margin="5 15 5 0" Height="30" Grid.ColumnSpan="2" Name="bMinimize" Click="bMinimize_Click">Minimize</Button>
            <StackPanel Grid.Row="8" Grid.ColumnSpan="3" Orientation="Horizontal" Visibility="Collapsed" Height="auto" Width="auto" Name="spUpdatesHistory" Background="#262626">
                <Expander Name="expUpdatesHistory" Margin="0 0 0 0" IsExpanded="True" Collapsed="expUpdatesHistory_Collapsed" Cursor="Hand"/>
                <RichTextBox HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" Width="765" Name="rtbAboutText" Height="auto" IsDocumentEnabled="True" Background="Transparent" Foreground="White" AcceptsReturn="True" AcceptsTab="True" BorderBrush="Transparent" BorderThickness="0" IsReadOnly="True" MaxHeight="250">
                    <FlowDocument PageWidth="{Binding Path=ActualWidth, ElementName=rtbAboutText, Mode=OneWay}">
                        <Paragraph Foreground="LightGreen" Margin="0">BlackScreens</Paragraph>
                        <Paragraph Margin="0" xml:space="preserve">      Open Source. Working on Windows 10, up to 6 screens. <Hyperlink PreviewMouseLeftButtonDown="Hyperlink_PreviewMouseLeftButtonDown" NavigateUri="https://github.com/BlueBird67/BlackScreens" Foreground="White" Cursor="Hand">Github link</Hyperlink>.</Paragraph>
                        <Paragraph Foreground="LightGreen" Margin="0 10 0 0">Updates history</Paragraph>
                        <Paragraph Margin="0">v1.09 (15/01/2021)</Paragraph>
                        <Paragraph Margin="0" xml:space="preserve">      - Windows 10 screens system scale parameter should not interfere in app anymore</Paragraph>
                        <Paragraph Margin="0" xml:space="preserve">      - Adding option for firstr 3 screens to choose for an image file for opacity, instead of full black</Paragraph>
                        <Paragraph Margin="0">v1.08 (01/08/2020)</Paragraph>
                        <Paragraph Margin="0" xml:space="preserve">      - Mouse cursor disappear on black windows after 3 seconds (default). Parameter can be changed in user default file</Paragraph>
                        <Paragraph Margin="0">v1.07 (27/07/2020)</Paragraph>
                        <Paragraph Margin="0" xml:space="preserve">      - Adding ALT+0 key to switch all screens</Paragraph>
                        <Paragraph Margin="0">v1.06 (25/07/2020)</Paragraph>
                        <Paragraph Margin="0" xml:space="preserve">      - Adding mouse clickthrough option</Paragraph>
                        <Paragraph Margin="0">v1.05 (21/07/2020)</Paragraph>
                        <Paragraph Margin="0" xml:space="preserve">      - Adding screens positionning information on clipboard when left clicking on first screen name in the main parameters screen</Paragraph>
                    </FlowDocument>
                </RichTextBox>
            </StackPanel>
        </Grid>
        <taskbarnotification:TaskbarIcon x:Name="notifyIcon"
                    Visibility="Visible"
                    ToolTipText="BlackScreens"
                    IconSource="/moon.ico"
                    MenuActivation="RightClick" TrayRightMouseDown="notifyIcon_TrayRightMouseDown">
            <taskbarnotification:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show parameters" Name="miShowHideParameters" Click="miShowHideParameters_Click"/>
                    <MenuItem Header="About BlackScreens" Name="miAbout" Click="miAbout_Click"/>
                    <Separator/>
                    <MenuItem Header="Exit BlackScreen" Name="miQuitApp" Click="bExit_Click"/>
                </ContextMenu>
            </taskbarnotification:TaskbarIcon.ContextMenu>
        </taskbarnotification:TaskbarIcon>
    </StackPanel>
</Window>
